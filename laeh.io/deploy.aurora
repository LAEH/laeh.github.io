import os

class Profile(Struct):
  role              = Default(String, "laeh")
  environment       = Default(String, "devel")
  name              = Default(String, "server")
  package           = Default(String, "{{name}}")
  node              = Default(String, "node")
  version           = Default(String, "latest")
  config            = Required(String)
  flags             = Default(String, "")

resources = Resources(cpu = 1, ram = 4*GB, disk = 1*GB)

server_install = Packer.install(
  name = '{{profile.package}}',
  role = '{{profile.role}}',
  version = '{{profile.version}}'
)

node_install = Packer.install(
  name = '{{profile.node}}',
  role = '{{profile.role}}',
  version = '{{profile.version}}'
)

server = Process(
  name = '{{profile.name}}',
  cmdline = 'node server.js --port {{thermos.ports[http]}}')

server_task = Task(
  name = "install",
  processes = [
    node_install,
    server_install,
    Stats(),
    server
  ],
  resources = resources,
  constraints = order(node_install, server_install, server)
)

service = Job(
  role = '{{profile.role}}',
  environment = '{{profile.environment}}',
  name = '{{profile.name}}',
  contact = '{{role}}@twitter.com',  # Set this to your team email
  service = '{{production}}',
  announce = Announcer(primary_port='http', portmap={'aurora': 'http'}),
  update_config = UpdateConfig(
    batch_size = 30,
    restart_threshold = 90,
    watch_secs = 60
  ),
  health_check_config = HealthCheckConfig(initial_interval_secs = 30),
  task = server_task,
	instances = 1
)

Devel = Profile(config = "com.twitter.{{name}}.Main")
jobs = []
dcs = ["smf1", "atla"]

#  When you're ready to productionize your service, use these profiles as your guide.
#
#  Prod = Profile(
#   role = "<valid service account is required>", environment = "prod",
#   version = "live", config = "com.twitter.config.ProductionMesosConfig")
#
#  jobs += [service(cluster = dc, production = True).bind(profile = Prod) for dc in dcs]
#
#  Staging = Profile(
#   role = "<valid service account is required>", environment = "staging",
#   package = 'vireo-mux-staging', config = "com.twitter.config.StagingMesosConfig")

jobs += [service(cluster = dc).bind(profile = Devel) for dc in dcs]
